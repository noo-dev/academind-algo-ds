function mergeSort(arr) {
    if (arr.length < 2) {
        return arr;
    }

    if (arr.length === 2) {
        return arr[0] > arr[1] ? [arr[1], arr[0]] : arr
    }

    const middleIdx = Math.floor(arr.length / 2);
    const leftArray = arr.slice(0, middleIdx);
    const rightArray = arr.slice(middleIdx);

    const leftSortedArray = mergeSort(leftArray)
    const rightSortedArray = mergeSort(rightArray)

    const mergedArr = []
    let leftArrIndex = 0
    let rightArrIndex = 0
    while (
        leftArrIndex < leftSortedArray.length && rightArrIndex < rightSortedArray.length
    ) {
        if ( leftSortedArray[leftArrIndex] > rightSortedArray[rightArrIndex]) {
            mergedArr.push(rightSortedArray[rightArrIndex]);
            rightArrIndex++;
        } else {
            mergedArr.push(leftSortedArray[leftArrIndex])
            leftArrIndex++
        }        
    }

    while (leftArrIndex < leftSortedArray.length) {
        mergedArr.push(leftSortedArray[leftArrIndex])
        leftArrIndex++
    }

    while (rightArrIndex < rightSortedArray.length) {
        mergedArr.push(rightSortedArray[rightArrIndex]) 
        rightArrIndex++
    
    }

    return mergedArr
} 

const sortedArray = mergeSort([-10, 33, 5, 10, 3, -19, -99, 100])
// const sortedArray = mergeSort([-10, 100, 33, 5])

console.log("result", sortedArray)

module.exports = mergeSort